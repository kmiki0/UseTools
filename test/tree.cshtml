@{
    ViewBag.Title = "ツリーレイアウト";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <!-- Bulma CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
    <style>
        /* トグルボタンのカスタムスタイル - 灰色/緑色の切り替えに必要 */
        .toggle-btn {
            background-color: #7a7a7a !important;
            border-color: #7a7a7a !important;
            color: white !important;
        }

        .toggle-btn:hover {
            background-color: #5a5a5a !important;
            border-color: #5a5a5a !important;
        }

        .toggle-btn.is-active {
            background-color: #48c774 !important;
            border-color: #48c774 !important;
        }

        .toggle-btn.is-active:hover {
            background-color: #3ec46d !important;
            border-color: #3ec46d !important;
        }

        /* テキストエリアを画面いっぱいに拡張 */
        .full-height-textarea {
            height: calc(100vh - 250px);
            resize: none;
        }

        /* ツリーのスクロール */
        .scrollable-tree {
            height: calc(100vh - 150px);
            overflow-y: auto;
        }
    </style>
</head>
<body class="p-4">
    <div class="columns">
        <!-- 左側: ツリー構造 -->
        <div class="column is-one-third">
            <div class="box scrollable-tree">
                <h3 class="title is-5 mb-4">アイテムリスト</h3>
                
                <!-- 親アイテム1 -->
                <div class="mb-4">
                    <button class="button toggle-btn parent-toggle is-fullwidth has-text-left has-text-weight-semibold" data-parent="parent1">
                        親アイテム1
                    </button>
                    
                    <div class="ml-5 mt-2">
                        <button class="button toggle-btn child-toggle is-fullwidth has-text-left mb-2" data-parent="parent1">
                            子アイテム1-1
                        </button>
                        <button class="button toggle-btn child-toggle is-fullwidth has-text-left mb-2" data-parent="parent1">
                            子アイテム1-2
                        </button>
                        <button class="button toggle-btn child-toggle is-fullwidth has-text-left mb-2" data-parent="parent1">
                            子アイテム1-3
                        </button>
                    </div>
                </div>

                <!-- 親アイテム2 -->
                <div class="mb-4">
                    <button class="button toggle-btn parent-toggle is-fullwidth has-text-left has-text-weight-semibold" data-parent="parent2">
                        親アイテム2
                    </button>
                    
                    <div class="ml-5 mt-2">
                        <button class="button toggle-btn child-toggle is-fullwidth has-text-left mb-2" data-parent="parent2">
                            子アイテム2-1
                        </button>
                        <button class="button toggle-btn child-toggle is-fullwidth has-text-left mb-2" data-parent="parent2">
                            子アイテム2-2
                        </button>
                    </div>
                </div>

                <!-- 親アイテム3 -->
                <div class="mb-4">
                    <button class="button toggle-btn parent-toggle is-fullwidth has-text-left has-text-weight-semibold" data-parent="parent3">
                        親アイテム3
                    </button>
                    
                    <div class="ml-5 mt-2">
                        <button class="button toggle-btn child-toggle is-fullwidth has-text-left mb-2" data-parent="parent3">
                            子アイテム3-1
                        </button>
                        <button class="button toggle-btn child-toggle is-fullwidth has-text-left mb-2" data-parent="parent3">
                            子アイテム3-2
                        </button>
                        <button class="button toggle-btn child-toggle is-fullwidth has-text-left mb-2" data-parent="parent3">
                            子アイテム3-3
                        </button>
                        <button class="button toggle-btn child-toggle is-fullwidth has-text-left mb-2" data-parent="parent3">
                            子アイテム3-4
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- 右側: テキストエリアとボタン -->
        <div class="column">
            <div class="box">
                <textarea class="textarea full-height-textarea" id="mainTextArea" placeholder="ここにテキストを入力してください..."></textarea>
                <div class="has-text-right mt-3">
                    <button class="button is-primary is-medium" id="submitBtn">送信</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            // 個別の子トグルボタンのクリック
            $('.child-toggle').on('click', function() {
                $(this).toggleClass('is-active');
            });

            // 親トグルボタンのクリック
            $('.parent-toggle').on('click', function() {
                var $btn = $(this);
                var parentId = $btn.data('parent');
                var $childButtons = $('.child-toggle[data-parent="' + parentId + '"]');
                
                // 親ボタンの状態を切り替え
                $btn.toggleClass('is-active');
                
                // 親ボタンの状態に合わせて子ボタンを全て切り替え
                if ($btn.hasClass('is-active')) {
                    $childButtons.addClass('is-active');
                } else {
                    $childButtons.removeClass('is-active');
                }
            });

            // 送信ボタンのクリック
            $('#submitBtn').on('click', function() {
                var textValue = $('#mainTextArea').val();
                var selectedItems = [];
                
                // アクティブなアイテムを収集
                $('.toggle-btn.is-active').each(function() {
                    selectedItems.push($(this).text().trim());
                });

                console.log('選択されたアイテム:', selectedItems);
                console.log('テキスト:', textValue);
                
                // ここでサーバーへのPOST処理などを実装
                alert('送信しました!\n選択アイテム数: ' + selectedItems.length);
            });
        });
    </script>
</body>
</html>