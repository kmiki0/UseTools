@{
    ViewBag.Title = "ツリーレイアウト";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <style>
        * {
            box-sizing: border-box;
        }

        .container {
            display: flex;
            gap: 20px;
            padding: 20px;
            height: 100vh;
        }

        /* 左側のツリー部分 */
        .tree-container {
            flex: 0 0 350px;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            background-color: #f9f9f9;
            overflow-y: auto;
        }

        .tree-item {
            margin-bottom: 10px;
        }

        .parent-item {
            margin-bottom: 15px;
        }

        .toggle-btn {
            padding: 10px 20px;
            background-color: #6c757d;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
            text-align: left;
            width: 100%;
            margin-bottom: 8px;
        }

        .toggle-btn:hover {
            background-color: #5a6268;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

        .toggle-btn.active {
            background-color: #28a745;
        }

        .toggle-btn.active:hover {
            background-color: #218838;
        }

        .parent-toggle {
            font-weight: 600;
            font-size: 16px;
            padding: 12px 20px;
        }

        .child-toggle {
            font-weight: 500;
            font-size: 14px;
        }

        .child-items {
            margin-left: 40px;
            margin-top: 10px;
        }

        .child-item {
            margin-bottom: 8px;
        }

        /* 右側のテキストエリア部分 */
        .content-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            background-color: #fff;
        }

        .text-area-wrapper {
            flex: 1;
            margin-bottom: 15px;
        }

        .large-textarea {
            width: 100%;
            height: 100%;
            padding: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            resize: none;
        }

        .large-textarea:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
        }

        .button-container {
            display: flex;
            justify-content: flex-end;
        }

        .submit-btn {
            padding: 12px 30px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .submit-btn:hover {
            background-color: #0056b3;
        }

        .submit-btn:active {
            transform: scale(0.98);
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- 左側: ツリー構造 -->
        <div class="tree-container">
            <h3>アイテムリスト</h3>
            
            <!-- 親アイテム1 -->
            <div class="parent-item">
                <button class="toggle-btn parent-toggle" data-parent="parent1">
                    親アイテム1
                </button>
                
                <div class="child-items" data-parent-group="parent1">
                    <div class="child-item">
                        <button class="toggle-btn child-toggle" data-parent="parent1">
                            子アイテム1-1
                        </button>
                    </div>
                    <div class="child-item">
                        <button class="toggle-btn child-toggle" data-parent="parent1">
                            子アイテム1-2
                        </button>
                    </div>
                    <div class="child-item">
                        <button class="toggle-btn child-toggle" data-parent="parent1">
                            子アイテム1-3
                        </button>
                    </div>
                </div>
            </div>

            <!-- 親アイテム2 -->
            <div class="parent-item">
                <button class="toggle-btn parent-toggle" data-parent="parent2">
                    親アイテム2
                </button>
                
                <div class="child-items" data-parent-group="parent2">
                    <div class="child-item">
                        <button class="toggle-btn child-toggle" data-parent="parent2">
                            子アイテム2-1
                        </button>
                    </div>
                    <div class="child-item">
                        <button class="toggle-btn child-toggle" data-parent="parent2">
                            子アイテム2-2
                        </button>
                    </div>
                </div>
            </div>

            <!-- 親アイテム3 -->
            <div class="parent-item">
                <button class="toggle-btn parent-toggle" data-parent="parent3">
                    親アイテム3
                </button>
                
                <div class="child-items" data-parent-group="parent3">
                    <div class="child-item">
                        <button class="toggle-btn child-toggle" data-parent="parent3">
                            子アイテム3-1
                        </button>
                    </div>
                    <div class="child-item">
                        <button class="toggle-btn child-toggle" data-parent="parent3">
                            子アイテム3-2
                        </button>
                    </div>
                    <div class="child-item">
                        <button class="toggle-btn child-toggle" data-parent="parent3">
                            子アイテム3-3
                        </button>
                    </div>
                    <div class="child-item">
                        <button class="toggle-btn child-toggle" data-parent="parent3">
                            子アイテム3-4
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- 右側: テキストエリアとボタン -->
        <div class="content-container">
            <div class="text-area-wrapper">
                <textarea class="large-textarea" id="mainTextArea" placeholder="ここにテキストを入力してください..."></textarea>
            </div>
            <div class="button-container">
                <button class="submit-btn" id="submitBtn">送信</button>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            // 個別の子トグルボタンのクリック
            $('.child-toggle').on('click', function() {
                $(this).toggleClass('active');
            });

            // 親トグルボタンのクリック
            $('.parent-toggle').on('click', function() {
                var $btn = $(this);
                var parentId = $btn.data('parent');
                var $childButtons = $('.child-toggle[data-parent="' + parentId + '"]');
                
                // 親ボタンの状態を切り替え
                $btn.toggleClass('active');
                
                // 親ボタンの状態に合わせて子ボタンを全て切り替え
                if ($btn.hasClass('active')) {
                    $childButtons.addClass('active');
                } else {
                    $childButtons.removeClass('active');
                }
            });

            // 送信ボタンのクリック
            $('#submitBtn').on('click', function() {
                var textValue = $('#mainTextArea').val();
                var selectedItems = [];
                
                // アクティブなアイテムを収集
                $('.toggle-btn.active').each(function() {
                    selectedItems.push($(this).text().trim());
                });

                console.log('選択されたアイテム:', selectedItems);
                console.log('テキスト:', textValue);
                
                // ここでサーバーへのPOST処理などを実装
                alert('送信しました!\n選択アイテム数: ' + selectedItems.length);
            });
        });
    </script>
</body>
</html>